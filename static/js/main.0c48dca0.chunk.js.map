{"version":3,"sources":["reducer/organization.js","action/organization.js","reducer/index.js","reducer/message.js","action/message.js","store/index.js","components/group.js","components/logo.js","components/message.js","components/user.js","App.js","serviceWorker.js","index.js"],"names":["organization","groups","state","arguments","length","undefined","name","id","users","currentGroup","currentUser","action","type","map","item","Object","objectSpread","push","console","log","combineReducers","message","messages","from","content","group","value","src_store","createStore","rootReducer","GroupItem","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","isHover","isEditing","newName","setState","update","_this2","_this$state","react_default","a","createElement","InputGroup","Input","onChange","e","target","InputGroupAddon","addonType","Button","color","onClick","rename","bind","fouse","style","flex","cursor","ListGroupItem","onMouseOver","mouseOver","onMouseOut","mouseOut","display","flexDirection","background","styles","icon","delete","Component","Group","dispatch","updateGroup","delGroup","_this3","className","ListGroup","index","group_GroupItem","key","setFouse","upGroup","width","fontSize","margin","connect","_state$organization","Logo","Message","msg","updateMsg","sendMsg","User","App","store","configureStore","height","window","innerHeight","es","Container","container","Row","Col","logo","sm","xl","components_message","user","paddingLeft","paddingRight","marginLeft","marginRight","maxWidth","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0c48dca0.chunk.js","sourcesContent":["import {\n    ADD_GROUP,\n    ADD_USER,\n    UP_GROUP,\n    DEL_GROUP\n} from '../action/organization';\n\nexport default function(state={\n    groups: [{name: 'hah', id: 0}],\n    users: [],\n    currentGroup: null,\n    currentUser: null,\n}, action) {\n    let groups, users;\n    switch (action.type) {\n        case ADD_GROUP:\n            break;\n        case UP_GROUP:\n            groups = state.groups.map(item => {\n                if (item.id == action.id) \n                    item.name = action.name;\n                return item;\n            });\n            return {...state, groups};\n        case DEL_GROUP:\n            groups = []\n            state.groups.map(item => {\n                if (item.id != action.id)\n                    groups.push(item);\n            });\n            return {...state, groups};\n        case ADD_USER:\n            break;\n        default:\n            return state;\n    }\n}","export const ADD_USER = 'ADD_USER';\nexport const ADD_GROUP = 'ADD_GROUP';\nexport const UP_GROUP = 'UP_GROUP';\nexport const DEL_GROUP = 'DEL_GROUP';\nexport const SET_CURRENT_GROUP = 'SET_CURRENT_GROUP';\n\n\nexport const addUser = (user, group) => {\n    return {\n        type: ADD_USER,\n        value: {\n            user,\n            group\n        }\n    };\n}\n\nexport const addGroup = (name) => {\n    return {\n        type: ADD_GROUP,\n        name\n    };\n}\n\nexport const updateGroup = (id, name) => {\n    return {\n        type: UP_GROUP,\n        id,\n        name\n    };\n}\n\nexport const delGroup = (id) => {\n    return {\n        type: DEL_GROUP,\n        id\n    }\n}\n\nexport const setCurrentGroup = (id) => {\n    return {\n        type: SET_CURRENT_GROUP,\n        id\n    }\n}","import { combineReducers } from 'redux';\n\nimport organization from './organization';\nimport message from './message';\n\nconsole.log(organization);\n\nexport default combineReducers({\n    organization,\n    message\n});\n","import {\n    ADD_MSG \n} from '../action/message';\n\nexport default function(state={\n    messages: [{from: 'ming', content: 'nihaoa ddddd', group: ''}]\n}, action) {\n    let messages;\n    switch (action.type) {\n        case ADD_MSG:\n            messages = state.messages.map(item=>item);\n            messages.push(action.value);\n            return {...state, messages};\n        default:\n            return state;\n    }\n}","export const ADD_MSG = 'ADD_MSG';\n\nexport const addMsg = (who, content) => {\n    return {\n        type: ADD_MSG,\n        value: {\n            from: who,\n            content\n        }\n    };\n}","import { createStore, applyMiddleware } from 'redux';\n\nimport rootReducer from '../reducer';\n\nexport default function() {\n    const store = createStore(\n        rootReducer\n        );\n    return store;\n} ","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { ListGroup, ListGroupItem, Button, Input, InputGroup, InputGroupAddon  } from 'reactstrap';\n\nimport { updateGroup, delGroup, addGroup } from '../action/organization';\n\nclass GroupItem extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isHover: false,\n            isEditing: false,\n            newName: this.props.value.name\n        }\n    }\n\n    mouseOver() {\n        this.setState({isHover: true});\n    }\n\n    mouseOut() {\n        this.setState({isHover: false});\n    }\n\n    rename() {\n        this.setState({\n            isEditing: false\n        });\n        this.props.update(this.state.newName);\n    }\n\n    render() {\n        const { value } = this.props;\n        const { isHover, isEditing, newName } = this.state;\n\n        let content;\n        if (isEditing) {\n            content = <InputGroup>\n                        <Input value={newName} onChange={(e)=>this.setState({newName: e.target.value})}/>\n                        <InputGroupAddon addonType=\"append\">\n                            <Button color=\"primary\" onClick={this.rename.bind(this)}>Ok</Button>\n                        </InputGroupAddon>\n                    </InputGroup>\n        }\n        else {\n            content = <span \n                onClick={this.props.fouse.bind(this)}\n                style={{flex: 1, cursor: 'pointer'}}>\n                {value.name}\n                </span>\n        }\n\n        return (\n            <ListGroupItem onMouseOver={this.mouseOver.bind(this)} \n                onMouseOut={this.mouseOut.bind(this)}\n                style={{\n                    display: 'flex',\n                    flexDirection: 'row',\n                    background: isHover?'#ccc':null\n                }}\n            >\n                {content}\n                <span style={{...styles.icon, display:isHover&&!isEditing?'inherit':'none'}}\n                    onClick={this.props.delete.bind(this)}\n                >\n                    del\n                </span>\n                <span style={{...styles.icon, display:isHover&&!isEditing?'inherit':'none'}}\n                    onClick={()=>{this.setState({isEditing: true})}}\n                >\n                    edit\n                </span>\n            </ListGroupItem>\n        );\n    }\n}\n\n\nclass Group extends Component {\n    upGroup(id, name) {\n        this.props.dispatch(updateGroup(id, name));\n    }\n\n    delGroup(id) {\n        this.props.dispatch(delGroup(id));\n    }\n\n    setCurrent(id) {\n        this.props.dispatch();\n    }\n\n    setFouse(id) {\n        // this.props.dispatch()\n    }\n\n    render() {\n        const { groups } = this.props;\n\n        return (\n            <div className=\"groups\">\n                <ListGroup className=\"content\">\n                {\n                    groups.map((item, index) => <GroupItem value={item} \n                        key={index} \n                        delete={this.delGroup.bind(this, item.id)}\n                        fouse={this.setFouse.bind(this, item.id)}\n                        update={this.upGroup.bind(this, item.id)}/>)\n                }\n                </ListGroup>\n                <div className=\"input\">\n                    <Button color=\"primary\" style={{width: '100%'}}>Add Group</Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst styles = {\n    icon: {\n        fontSize: 12,\n        cursor: 'pointer',\n        margin: 5,\n    }\n}\n\nfunction mapState2Props(state) {\n    const { organization: { groups, currentGroup } } = state;\n    return {\n        groups,\n        currentGroup\n    };\n}\n\nGroup = connect(mapState2Props)(Group);\n\nexport default Group;","import React, { Component } from 'react';\n\nclass Logo extends Component {\n    render() {\n        return (\n            <div className=\"logo\">Chat</div>\n        );\n    }\n}\n\nexport default Logo;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Input, InputGroup, InputGroupAddon } from 'reactstrap';\n\nimport { addMsg } from '../action/message';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            msg: \"inhao\"\n        };\n    }\n\n    updateMsg(e) {\n        this.setState({msg: e.target.value});\n    }\n\n    sendMsg() {\n        const { msg } = this.state;\n        if (msg.length > 0) {\n            this.props.dispatch(addMsg('ming', msg));\n            this.setState({msg: ''});\n        }\n    }\n\n    render() {\n        const { messages } = this.props;\n        const { msg } = this.state;\n\n        return (\n            <div className=\"messages\">\n                <div className=\"content\">\n                {\n                    messages.map((item, index) => <div key={index}>\n                        <span>{ item.from }:</span>\n                        <span>{ item.content }</span>\n                    </div>)\n                }\n                </div>\n                <div className=\"input\">\n                    <InputGroup>\n                        <Input value={msg} onChange={this.updateMsg.bind(this)}/>\n                        <InputGroupAddon addonType=\"append\">\n                            <Button color=\"primary\" onClick={this.sendMsg.bind(this)}>Send</Button>\n                        </InputGroupAddon>\n                    </InputGroup>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapState2Props(state) {\n    const { message: { messages } } = state;\n    return {\n        messages\n    };\n}\n\nMessage = connect(mapState2Props)(Message);\n\nexport default Message;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { ListGroup, Button, ListGroupItem } from 'reactstrap';\n\nclass User extends Component {\n    render() {\n        const { users } = this.props;\n\n        return (\n            <div className=\"users\">\n                <ListGroup className=\"content\">\n                {\n                    users.map((item, index) => <ListGroupItem key={index}>\n                        {item}\n                    </ListGroupItem>)\n                }\n                </ListGroup>\n                <div className=\"input\">\n                    <Button color=\"primary\" style={{width: '100%'}}>Add User</Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapState2Props(state) {\n    const { organization: { users } } = state;\n    return {\n        users\n    };\n}\n\nUser = connect(mapState2Props)(User);\n\n\nexport default User;","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { Container, Row, Col } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport configureStore from './store';\nimport './App.css';\nimport Group from './components/group';\nimport Logo from './components/logo';\nimport Message from './components/message';\nimport User from './components/user';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.store = configureStore();\n    this.state = {\n      height: window.innerHeight,\n    };\n  }\n\n\n  render() {\n    const { height } = this.state;\n\n    return (\n      <Provider store={this.store}>\n        <Container style={{...styles.container, height}}>\n          <Row>\n            <Col>\n              <Logo/>\n            </Col>\n          </Row>\n          <Row style={styles.content}>\n            <Col sm=\"3\" xl=\"2\">\n              <Group/>\n            </Col>\n            <Col>\n              <Message/>\n            </Col>\n            <Col sm=\"3\" xl=\"2\">\n              <User/>\n            </Col>\n          </Row>\n        </Container>\n      </Provider>\n    );\n  }\n}\n\n\nconst styles = {\n  container: {\n    paddingLeft: 0,\n    paddingRight: 0,\n    marginLeft: 15,\n    marginRight: 0,\n    maxWidth: 'calc(100% - 30px)',\n  },\n  content: {\n    height: 'calc(100% - 50px)'\n  }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}